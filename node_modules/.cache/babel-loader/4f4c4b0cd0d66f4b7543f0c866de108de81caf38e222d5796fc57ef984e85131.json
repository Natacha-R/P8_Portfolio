{"ast":null,"code":"var _jsxFileName = \"/Users/natacharippert/Desktop/P5_Kasa/src/components/Slideshow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // Importation de la bibliothèque React, HOOK qui permet de gérer l'état du composant fonctionnel (garder une trace de l'index de l'image actuellement affichée dans le diaporama).\n\nimport imageFlecheD from \"../assets/flecheR.png\";\nimport imageFlecheG from \"../assets/flecheL.png\";\n\n// composant Slideshow (diaporama) \"logement\" avec comme PROPS 'image' (tableau d'images à afficher dans le diaporama).\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Slideshow = ({\n  images\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0); // currentIndex : variable d'état qui garde la trace de l'index de l'image actuellement affichée.\n  // setCurrentIndex : fonction permet de mettre à jour l'index actuel de l'image // useState(0) : L'état initial est 0, donc la première image du tableau sera affichée par défaut.\n\n  // Aller à l'image suivante\n  const nextSlide = () => {\n    setCurrentIndex(prevIndex => prevIndex === images.length - 1 ? 0 : prevIndex + 1); // Si l'index actuel (prevIndex) est égal au dernier index du tableau d'images (images.length - 1), on revient à la première image (index 0).\n  };\n\n  // Revenir à l'image précédente\n  const prevSlide = () => {\n    setCurrentIndex(prevIndex => prevIndex === 0 ? images.length - 1 : prevIndex - 1);\n  };\n\n  // Si le nombre d'images est 1, on n'affiche ni les flèches ni la numérotation\n  const isSingleImage = images.length === 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: images[currentIndex],\n      alt: `Slide ${currentIndex + 1}`,\n      className: \"slideshow-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), !isSingleImage && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prev\",\n        onClick: prevSlide,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageFlecheG,\n          alt: \"Pr\\xE9c\\xE9dent\",\n          className: \"arrow-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: nextSlide,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageFlecheD,\n          alt: \"Suivant\",\n          className: \"arrow-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !isSingleImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideshow-counter\",\n      children: [currentIndex + 1, \"/\", images.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Slideshow, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","imageFlecheD","imageFlecheG","jsxDEV","_jsxDEV","Fragment","_Fragment","Slideshow","images","_s","currentIndex","setCurrentIndex","nextSlide","prevIndex","length","prevSlide","isSingleImage","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/natacharippert/Desktop/P5_Kasa/src/components/Slideshow.jsx"],"sourcesContent":["import React, { useState } from \"react\"; // Importation de la bibliothèque React, HOOK qui permet de gérer l'état du composant fonctionnel (garder une trace de l'index de l'image actuellement affichée dans le diaporama).\n\nimport imageFlecheD from \"../assets/flecheR.png\";\nimport imageFlecheG from \"../assets/flecheL.png\";\n\n// composant Slideshow (diaporama) \"logement\" avec comme PROPS 'image' (tableau d'images à afficher dans le diaporama).\n\nconst Slideshow = ({ images }) => {\n  const [currentIndex, setCurrentIndex] = useState(0); // currentIndex : variable d'état qui garde la trace de l'index de l'image actuellement affichée.\n  // setCurrentIndex : fonction permet de mettre à jour l'index actuel de l'image // useState(0) : L'état initial est 0, donc la première image du tableau sera affichée par défaut.\n\n  // Aller à l'image suivante\n  const nextSlide = () => {\n    setCurrentIndex((prevIndex) =>\n      prevIndex === images.length - 1 ? 0 : prevIndex + 1\n    ); // Si l'index actuel (prevIndex) est égal au dernier index du tableau d'images (images.length - 1), on revient à la première image (index 0).\n  };\n\n  // Revenir à l'image précédente\n  const prevSlide = () => {\n    setCurrentIndex((prevIndex) =>\n      prevIndex === 0 ? images.length - 1 : prevIndex - 1\n    );\n  };\n\n  // Si le nombre d'images est 1, on n'affiche ni les flèches ni la numérotation\n  const isSingleImage = images.length === 1;\n\n  return (\n    <div className=\"slideshow\">\n      {/* Affichage de l'image actuelle */}\n      <img\n        src={images[currentIndex]}\n        alt={`Slide ${currentIndex + 1}`}\n        className=\"slideshow-image\"\n      />\n\n      {/* Affichage des flèches seulement si plusieurs images */}\n      {!isSingleImage && (\n        <>\n          <button className=\"prev\" onClick={prevSlide}>\n            <img src={imageFlecheG} alt=\"Précédent\" className=\"arrow-icon\" />\n          </button>\n\n          <button className=\"next\" onClick={nextSlide}>\n            <img src={imageFlecheD} alt=\"Suivant\" className=\"arrow-icon\" />\n          </button>\n        </>\n      )}\n\n      {/* Affichage de la numérotation seulement si plusieurs images */}\n      {!isSingleImage && (\n        <div className=\"slideshow-counter\">\n          {currentIndex + 1}/{images.length}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Slideshow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;;AAEzC,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,YAAY,MAAM,uBAAuB;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD;;EAEA;EACA,MAAMY,SAAS,GAAGA,CAAA,KAAM;IACtBD,eAAe,CAAEE,SAAS,IACxBA,SAAS,KAAKL,MAAM,CAACM,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGD,SAAS,GAAG,CACpD,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBJ,eAAe,CAAEE,SAAS,IACxBA,SAAS,KAAK,CAAC,GAAGL,MAAM,CAACM,MAAM,GAAG,CAAC,GAAGD,SAAS,GAAG,CACpD,CAAC;EACH,CAAC;;EAED;EACA,MAAMG,aAAa,GAAGR,MAAM,CAACM,MAAM,KAAK,CAAC;EAEzC,oBACEV,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExBd,OAAA;MACEe,GAAG,EAAEX,MAAM,CAACE,YAAY,CAAE;MAC1BU,GAAG,EAAE,SAASV,YAAY,GAAG,CAAC,EAAG;MACjCO,SAAS,EAAC;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,EAGD,CAACR,aAAa,iBACbZ,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBACEd,OAAA;QAAQa,SAAS,EAAC,MAAM;QAACQ,OAAO,EAAEV,SAAU;QAAAG,QAAA,eAC1Cd,OAAA;UAAKe,GAAG,EAAEjB,YAAa;UAACkB,GAAG,EAAC,iBAAW;UAACH,SAAS,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eAETpB,OAAA;QAAQa,SAAS,EAAC,MAAM;QAACQ,OAAO,EAAEb,SAAU;QAAAM,QAAA,eAC1Cd,OAAA;UAAKe,GAAG,EAAElB,YAAa;UAACmB,GAAG,EAAC,SAAS;UAACH,SAAS,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC;IAAA,eACT,CACH,EAGA,CAACR,aAAa,iBACbZ,OAAA;MAAKa,SAAS,EAAC,mBAAmB;MAAAC,QAAA,GAC/BR,YAAY,GAAG,CAAC,EAAC,GAAC,EAACF,MAAM,CAACM,MAAM;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CAnDIF,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAqDf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}